{"version":3,"sources":["Components/imageGallery/imageGalleryItem/ImageGalleryItem.js","Components/imageGallery/ImageGallery.js","Components/searchbar/Searchbar.js","Components/button/Button.js","Components/loader/Loader.js","Components/modal/Modal.js","utils/api.js","App/App.js","index.js"],"names":["ImageGalleryItem","smallImage","alt","onClick","id","bigImage","className","src","data-bigimage","data-alt","ImageGallery","images","map","image","key","Searchbar","onSubmit","type","autocomplete","autofocus","placeholder","Button","onMore","Loader","color","height","width","Modal","_handleEscKey","keyCode","props","onClose","handleClick","e","target","attributes","class","document","addEventListener","this","removeEventListener","Component","getData","query","page","per_page","a","axios","_INITIAL_STATE_","maxPages","isLoadButton","isLoading","modal","App","afterScroll","state","closeModal","setState","scrollUp","window","scrollTo","top","documentElement","scrollHeight","behavior","handelSubmit","preventDefault","value","trim","replaceAll","handelCicks","dataset","bigimage","downImages","PER_PAGE","data","total","Math","ceil","totalHits","hits","srcImg","webformatURL","largeImageURL","tags","toString","prev","moreImages","ReactDOM","render","getElementById"],"mappings":"6PAmBeA,MAhBf,YAAqE,IAA1CC,EAAyC,EAAzCA,WAAYC,EAA6B,EAA7BA,IAASC,GAAoB,EAAxBC,GAAwB,EAApBD,SAASE,EAAW,EAAXA,SACrD,OACI,oBAAIC,UAAU,mBAAd,SACE,qBAAKC,IAAKN,EAAYC,IAAKA,EAAKM,gBAAeH,EAAUI,WAAUP,EAAKC,QAASA,EAASG,UAAU,8BCiB/FI,MAnBf,YAAyC,IAAlBC,EAAiB,EAAjBA,OAAOR,EAAU,EAAVA,QAC1B,OACI,oBAAIG,UAAU,eAAd,SACGK,EAAOC,KAAI,SAAAC,GAAK,OACb,wBAAC,EAAD,2BAAsBA,GAAtB,IAA6BV,QAASA,EAASW,IAAKD,EAAMT,YCmBzDW,MAxBf,YAAgC,IAAZC,EAAW,EAAXA,SAChB,OACI,wBAAQV,UAAU,YAAlB,SACE,uBAAMA,UAAU,aAAaU,SAAUA,EAAvC,UACE,wBAAQC,KAAK,SAASX,UAAU,oBAAhC,SACE,sBAAMA,UAAU,0BAAhB,sBAGF,uBACEA,UAAU,mBACVW,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,mCCDXC,MAZf,YAA2B,IAAVC,EAAS,EAATA,OACb,OACI,wBAAQhB,UAAU,SAASH,QAASmB,EAApC,2B,uBCUOC,MAVf,WACI,OACI,cAAC,IAAD,CACAN,KAAK,SACLO,MAAM,UACNC,OAAQ,IACRC,MAAO,OCPMC,E,4MAWjBC,cAAc,YACK,KADQ,EAAXC,SACO,EAAKC,MAAMC,W,EAWlCC,YAAY,SAACC,GACNA,EAAEC,OAAOC,WAAWC,OAAO,EAAKN,MAAMC,W,uDAT7C,WACIM,SAASC,iBAAiB,UAAWC,KAAKX,eAAe,K,kCAG7D,WACIS,SAASG,oBAAoB,UAAWD,KAAKX,eAAe,K,oBAOhE,WACI,OACI,qBAAKtB,UAAU,UAAUH,QAASoC,KAAKP,YAAvC,SACE,qBAAK1B,UAAU,QAAf,SACE,qBAAKC,IAAKgC,KAAKT,MAAMjB,MAAMR,SAAUH,IAAKqC,KAAKT,MAAMjB,MAAMX,c,GA/BxCuC,a,iBCGpBC,EAFF,uCAAE,WAAOC,EAAMC,EAAKC,GAAlB,SAAAC,EAAA,sEAAmCC,IAAM,GAAD,OAF7C,2BAE6C,gBAH3C,qCAG2C,cAA0BJ,EAA1B,qBAA4CE,EAA5C,iBAA6DD,IAArG,mFAAF,0DCGPI,EAAgB,CAClBrC,OAAO,GACPiC,KAAK,EACLD,MAAM,GACNM,SAAS,EACTC,cAAa,EACbC,WAAU,EACVC,MAAM,MAGWC,E,4MAEjBC,aAAc,E,EAEdC,M,eAAYP,G,EAEZQ,WAAW,WACP,EAAKC,SAAS,CAACL,MAAM,Q,EAGzBM,SAAS,WACLC,OAAOC,SAAS,CACZC,IAAKxB,SAASyB,gBAAgBC,aAC9BC,SAAU,Y,EAIlBC,aAAa,SAAChC,GACVA,EAAEiC,iBACF,EAAKT,SAAL,2BAAkBT,GAAlB,IAAmCL,MAAMV,EAAEC,OAAO,GAAGiC,MAAMC,OAAOC,WAAW,IAAI,KAAKlB,WAAU,M,EAGpGmB,YAAY,YAA+C,IAAD,IAA5CpC,OAAQqC,QAAkBlE,EAAkB,EAA3BmE,SAAkBtE,EAAS,EAATA,IAC7C,EAAKuD,SAAS,CAACL,MAAM,CAAC/C,WAASH,U,EAGnCuE,W,sBAAW,sCAAA3B,EAAA,yDACe,KAAnB,EAAKS,MAAMZ,MADP,uBAEH,EAAKc,SAAS,CAACN,WAAU,IAFtB,6BAMDuB,EAAS,GAEX9B,EAAK,EAAKW,MAAMX,OACK,IAAtB,EAAKW,MAAMN,UAAgBL,EAAK,EAAKW,MAAMN,UATvC,gBAUHL,EAAK,EAAKW,MAAMX,KAAK,EAVlB,8BAYH,EAAKa,SAAS,CAACN,WAAU,EAAMD,cAAa,IAZzC,sDAiBgBR,EAAQ,EAAKa,MAAMZ,MAAMC,EAAK8B,GAjB9C,iBAiBIC,EAjBJ,EAiBIA,KAEH1B,EAAS,EACTtC,EAAO,GAEK,IAAbgE,EAAKC,QACJ3B,EAAS4B,KAAKC,KAAKH,EAAKI,UAAUL,GAClC/D,EAAOgE,EAAKK,KAAKpE,KAAI,SAAAqE,GAAM,MAAG,CAC1BhF,WAAWgF,EAAOC,aAClB7E,SAAS4E,EAAOE,cAChBjF,IAAI+E,EAAOG,KACXhF,GAAG6E,EAAO7E,GAAGiF,gBAIrB,EAAK5B,UAAS,SAAA6B,GAAI,MAAG,CAAC3E,OAAO,GAAD,mBAAK2E,EAAK3E,QAAV,YAAoBA,IAAQsC,WAASL,OAAKO,WAAU,EAAMD,aAAaN,EAAKK,MAhCrG,mDAkCH,EAAKQ,SAAS,CAACN,WAAU,EAAMD,cAAa,IAlCzC,2D,EA8CXqC,W,sBAAW,sBAAAzC,EAAA,sDACP,EAAKQ,aAAY,EACjB,EAAKG,SAAS,CAACN,WAAU,IAFlB,2C,wDARX,WACOZ,KAAKgB,MAAMJ,UAAWZ,KAAKkC,aACtBlC,KAAKe,cACTf,KAAKmB,WACLnB,KAAKe,aAAY,K,oBASzB,WACI,OACI,sBAAKhD,UAAU,MAAf,UACKiC,KAAKgB,MAAMH,OAAS,cAAC,EAAD,CAAOvC,MAAO0B,KAAKgB,MAAMH,MAAOrB,QAASQ,KAAKiB,aACnE,cAAC,EAAD,CAAWxC,SAAUuB,KAAK0B,eAC1B,cAAC,EAAD,CAActD,OAAQ4B,KAAKgB,MAAM5C,OAAQR,QAASoC,KAAK+B,cACtD/B,KAAKgB,MAAML,cAAgB,cAAC,EAAD,CAAQ5B,OAAQiB,KAAKgD,aAChDhD,KAAKgB,MAAMJ,WAAa,cAAC,EAAD,W,GApFRV,aCdjC+C,IAASC,OACP,cAAC,EAAD,IACApD,SAASqD,eAAe,W","file":"static/js/main.760d8002.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nfunction ImageGalleryItem({smallImage, alt, id, onClick, bigImage}) {\n    return (\n        <li className=\"ImageGalleryItem\">\n          <img src={smallImage} alt={alt} data-bigimage={bigImage} data-alt={alt} onClick={onClick} className=\"ImageGalleryItem-image\" />\n        </li>\n    )\n}\n\nImageGalleryItem.propTypes = {\n    smallImage:PropTypes.string.isRequired,\n    bigImage: PropTypes.string.isRequired,\n    alt:PropTypes.string.isRequired,\n    id:PropTypes.string.isRequired,\n    onClick:PropTypes.func.isRequired,\n}\n\nexport default ImageGalleryItem\n\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport ImageGalleryItem from './imageGalleryItem/ImageGalleryItem';\n\nfunction ImageGallery({images,onClick}) {\n    return (\n        <ul className=\"ImageGallery\">\n          {images.map(image=>(\n              <ImageGalleryItem {...image} onClick={onClick} key={image.id}/>\n          ))}\n        </ul>\n    )\n}\n\nImageGallery.propTypes = {\n    images: PropTypes.arrayOf(PropTypes.shape({\n        smallImage:PropTypes.string.isRequired,\n        alt:PropTypes.string.isRequired,\n        id:PropTypes.string.isRequired,\n    })).isRequired,\n    onClick:PropTypes.func.isRequired,\n}\n\nexport default ImageGallery\n\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nfunction Searchbar({onSubmit}) {\n    return (\n        <header className=\"Searchbar\">\n          <form className=\"SearchForm\" onSubmit={onSubmit}>\n            <button type=\"submit\" className=\"SearchForm-button\">\n              <span className=\"SearchForm-button-label\">Search</span>\n            </button>\n\n            <input\n              className=\"SearchForm-input\"\n              type=\"text\"\n              autocomplete=\"off\"\n              autofocus\n              placeholder=\"Search images and photos\"\n            />\n          </form>\n        </header>\n    )\n}\n\nSearchbar.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n}\n\nexport default Searchbar\n\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nfunction Button({onMore}) {\n    return (\n        <button className=\"Button\" onClick={onMore}>\n            Load MORE...\n        </button>\n    )\n}\n\nButton.propTypes = {\n    onMore: PropTypes.func.isRequired,\n}\n\nexport default Button\n\n","import React from 'react'\nimport Spinner from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\n\nfunction Loader() {\n    return (\n        <Spinner\n        type=\"Hearts\"\n        color=\"#e63964\"\n        height={100}\n        width={100}\n      />\n    )\n}\nexport default Loader\n\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\n\nexport default class Modal extends Component {\n\n    static propTypes={\n            image: PropTypes.shape({\n            bigImage: PropTypes.string.isRequired,\n            alt: PropTypes.string.isRequired,\n        }).isRequired,\n        onClose: PropTypes.func.isRequired,\n    }\n\n\n    _handleEscKey=({keyCode})=>{\n        if(keyCode === 27) this.props.onClose()\n    }\n\n    componentDidMount(){\n        document.addEventListener(\"keydown\", this._handleEscKey, false);\n    }\n\n    componentWillUnmount(){\n        document.removeEventListener(\"keydown\", this._handleEscKey, false);\n    }\n\n    handleClick=(e)=>{\n        if(e.target.attributes.class) this.props.onClose()\n    }\n\n    render(){\n        return (\n            <div className=\"Overlay\" onClick={this.handleClick}>\n              <div className=\"Modal\">\n                <img src={this.props.image.bigImage} alt={this.props.image.alt} />\n              </div>\n            </div>\n    )}\n}\n\n\n","import axios from 'axios'\n\nconst TOKEN=\"21059964-5bf790d712106238e57c2f022\"\nconst URL=\"https://pixabay.com/api/\"\n\nconst getData= async (query,page,per_page)=>await axios(`${URL}?key=${TOKEN}&q=${query}&per_page=${per_page}&page=${page}`)\n\nexport default getData","import React, { Component } from 'react'\nimport ImageGallery from '../Components/imageGallery/ImageGallery';\nimport Searchbar from '../Components/searchbar/Searchbar';\nimport Button from '../Components/button/Button';\nimport Loader from '../Components/loader/Loader';\nimport Modal from '../Components/modal/Modal'\nimport getData from '../utils/api'\n\nconst _INITIAL_STATE_={\n    images:[],\n    page:0,\n    query:\"\",\n    maxPages:0,\n    isLoadButton:false,\n    isLoading:false,\n    modal:null,\n}\n\nexport default class App extends Component {\n\n    afterScroll = false\n    \n    state = {..._INITIAL_STATE_}\n\n    closeModal=()=>{\n        this.setState({modal:null})\n    }\n\n    scrollUp=()=>{\n        window.scrollTo({\n            top: document.documentElement.scrollHeight,\n            behavior: 'smooth',\n        });\n    }\n\n    handelSubmit=(e)=>{\n        e.preventDefault()\n        this.setState({..._INITIAL_STATE_, query:e.target[1].value.trim().replaceAll(\" \",\"+\"),isLoading:true})        \n    }\n\n    handelCicks=({target:{dataset:{bigimage:bigImage,alt}}})=>{\n        this.setState({modal:{bigImage,alt}})\n    }\n\n    downImages=async()=>{\n        if(this.state.query===\"\"){\n            this.setState({isLoading:false})\n            return\n        }\n        \n        const PER_PAGE=12\n\n        let page=this.state.page\n        if(this.state.maxPages===0 || page<this.state.maxPages){\n            page=this.state.page+1\n        }else{\n            this.setState({isLoading:false,isLoadButton:false})\n            return\n        }\n\n        try{\n            const {data}=await getData(this.state.query,page,PER_PAGE)\n            \n            let maxPages=0\n            let images=[]\n\n            if(data.total!==0) {\n                maxPages=Math.ceil(data.totalHits/PER_PAGE)\n                images=data.hits.map(srcImg=>({\n                    smallImage:srcImg.webformatURL,\n                    bigImage:srcImg.largeImageURL,\n                    alt:srcImg.tags,\n                    id:srcImg.id.toString(),\n                    }))\n            }\n\n            this.setState(prev=>({images:[...prev.images,...images],maxPages,page,isLoading:false,isLoadButton:page<maxPages}))\n        }catch(error){\n            this.setState({isLoading:false,isLoadButton:false})\n        }\n    }\n\n    componentDidUpdate(){\n        if(this.state.isLoading) this.downImages()\n        else if(this.afterScroll) {\n            this.scrollUp()\n            this.afterScroll=false\n        }\n    }\n\n    moreImages=async()=>{\n        this.afterScroll=true\n        this.setState({isLoading:true})\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                {this.state.modal && <Modal image={this.state.modal} onClose={this.closeModal} />}\n                <Searchbar onSubmit={this.handelSubmit}/>\n                <ImageGallery images={this.state.images} onClick={this.handelCicks}/>\n                {this.state.isLoadButton && <Button onMore={this.moreImages}/>}\n                {this.state.isLoading && <Loader/>}\n            </div>\n        )\n    }\n}\n","import ReactDOM from 'react-dom';\nimport './globalStyles.css';\nimport App from './App/App'\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}