{"version":3,"sources":["Components/imageGallery/imageGalleryItem/ImageGalleryItem.js","Components/imageGallery/ImageGallery.js","Components/searchbar/Searchbar.js","Components/button/Button.js","Components/loader/Loader.js","Components/modal/Modal.js","App/App.js","index.js"],"names":["ImageGalleryItem","smallImage","alt","id","onClick","className","src","ImageGallery","images","map","image","key","Searchbar","onSubmit","type","autocomplete","autofocus","placeholder","Button","onMore","Loader","color","height","width","Modal","onClose","e","target","attributes","class","bigImage","App","_INITIAL_STATE_","page","query","maxPages","isLoadButton","isLoading","modal","afterScroll","state","closeModal","setState","scrollUp","window","scrollTo","top","document","documentElement","scrollHeight","behavior","handelSubmit","preventDefault","value","trim","replaceAll","handelCicks","srcImg","find","i","downImages","a","TOKEN","SITE","PER_PAGE","axios","data","total","Math","ceil","totalHits","hits","webformatURL","largeImageURL","tags","toString","p","_handleEscKey","keyCode","moreImages","addEventListener","this","removeEventListener","Component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.3e84b120.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nfunction ImageGalleryItem({smallImage, alt, id, onClick}) {\n    return (\n        <li className=\"ImageGalleryItem\">\n          <img src={smallImage} alt={alt} id={id} onClick={onClick} className=\"ImageGalleryItem-image\" />\n        </li>\n    )\n}\n\nImageGalleryItem.propTypes = {\n    smallImage:PropTypes.string.isRequired,\n    alt:PropTypes.string.isRequired,\n    id:PropTypes.string.isRequired,\n    onClick:PropTypes.func.isRequired,\n}\n\nexport default ImageGalleryItem\n\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport ImageGalleryItem from './imageGalleryItem/ImageGalleryItem';\n\nfunction ImageGallery({images,onClick}) {\n    return (\n        <ul className=\"ImageGallery\">\n          {images.map(image=>(\n              <ImageGalleryItem {...image} onClick={onClick} key={image.id}/>\n          ))}\n        </ul>\n    )\n}\n\nImageGallery.propTypes = {\n    images: PropTypes.arrayOf(PropTypes.shape({\n        smallImage:PropTypes.string.isRequired,\n        alt:PropTypes.string.isRequired,\n        id:PropTypes.string.isRequired,\n    })).isRequired,\n    onClick:PropTypes.func.isRequired,\n}\n\nexport default ImageGallery\n\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nfunction Searchbar({onSubmit}) {\n    return (\n        <header className=\"Searchbar\">\n          <form className=\"SearchForm\" onSubmit={onSubmit}>\n            <button type=\"submit\" className=\"SearchForm-button\">\n              <span className=\"SearchForm-button-label\">Search</span>\n            </button>\n\n            <input\n              className=\"SearchForm-input\"\n              type=\"text\"\n              autocomplete=\"off\"\n              autofocus\n              placeholder=\"Search images and photos\"\n            />\n          </form>\n        </header>\n    )\n}\n\nSearchbar.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n}\n\nexport default Searchbar\n\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nfunction Button({onMore}) {\n    return (\n        <button className=\"Button\" onClick={onMore}>\n            Load MORE...\n        </button>\n    )\n}\n\nButton.propTypes = {\n    onMore: PropTypes.func.isRequired,\n}\n\nexport default Button\n\n","import React from 'react'\nimport Spinner from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\n\nfunction Loader() {\n    return (\n        <Spinner\n        type=\"Hearts\"\n        color=\"#e63964\"\n        height={100}\n        width={100}\n      />\n    )\n}\nexport default Loader\n\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nfunction Modal({image, onClose}) {\n    const handleClick=(e)=>{\n        if(e.target.attributes.class)onClose()\n    }\n    return (\n        <div className=\"Overlay\" onClick={handleClick}>\n          <div className=\"Modal\">\n            <img src={image.bigImage} alt={image.alt} />\n          </div>\n        </div>\n    )\n}\n\nModal.propTypes = {\n    image: PropTypes.shape({\n        bigImage: PropTypes.string.isRequired,\n        alt: PropTypes.string.isRequired,\n    }).isRequired,\n    onClose: PropTypes.func.isRequired,\n}\n\nexport default Modal\n\n","import React, { Component } from 'react'\nimport ImageGallery from '../Components/imageGallery/ImageGallery';\nimport Searchbar from '../Components/searchbar/Searchbar';\nimport Button from '../Components/button/Button';\nimport Loader from '../Components/loader/Loader';\nimport Modal from '../Components/modal/Modal'\nimport axios from 'axios'\n\nexport default class App extends Component {\n\n    _INITIAL_STATE_={\n        images:[],\n        page:0,\n        query:\"\",\n        maxPages:0,\n        isLoadButton:false,\n        isLoading:false,\n        modal:null,\n    }\n    afterScroll = false\n    \n    state = {...this._INITIAL_STATE_}\n\n    closeModal=()=>{\n        this.setState({modal:null})\n    }\n\n    scrollUp=()=>{\n        window.scrollTo({\n            top: document.documentElement.scrollHeight,\n            behavior: 'smooth',\n        });\n    }\n\n    handelSubmit=(e)=>{\n        e.preventDefault()\n        this.setState({...this._INITIAL_STATE_, query:e.target[1].value.trim().replaceAll(\" \",\"+\"),isLoading:true})        \n    }\n\n    handelCicks=({target:{id}})=>{\n        const srcImg=this.state.images.find(i=>i.id===id)\n        this.setState({modal:{\n            bigImage:srcImg.bigImage,\n            alt:srcImg.alt,\n        }})\n    }\n\n    downImages=async()=>{\n        if(this.state.query===\"\"){\n            this.setState({isLoading:false})\n            return\n        }\n        \n        const TOKEN=\"21059964-5bf790d712106238e57c2f022\"\n        const SITE=\"https://pixabay.com/api/\"\n        const PER_PAGE=12\n\n        let page=this.state.page\n        if(this.state.maxPages===0 || page<this.state.maxPages){\n            page=this.state.page+1\n        }else{\n            this.setState({isLoading:false,isLoadButton:false})\n            return\n        }\n\n        try{\n            const {data}=await axios(`${SITE}?key=${TOKEN}&q=${this.state.query}&per_page=${PER_PAGE}&page=${page}`)\n            \n            let maxPages=0\n            let images=[]\n\n            if(data.total!==0) {\n                maxPages=Math.ceil(data.totalHits/PER_PAGE)\n                images=data.hits.map(srcImg=>({\n                    smallImage:srcImg.webformatURL,\n                    bigImage:srcImg.largeImageURL,\n                    alt:srcImg.tags,\n                    id:srcImg.id.toString(),\n                    }))\n            }\n\n            this.setState(p=>({images:[...p.images,...images],maxPages,page,isLoading:false,isLoadButton:page<maxPages}))\n        }catch(error){\n            this.setState({isLoading:false,isLoadButton:false})\n        }\n    }\n\n    _handleEscKey=(e)=>{\n        if(this.state.modal && e.keyCode === 27) this.closeModal()\n    }\n\n    componentDidMount(){\n        document.addEventListener(\"keydown\", this._handleEscKey, false);\n    }\n\n    componentWillUnmount(){\n        document.removeEventListener(\"keydown\", this._handleEscKey, false);\n    }\n\n    componentDidUpdate(){\n        if(this.state.isLoading) this.downImages()\n        else if(this.afterScroll) {\n            this.scrollUp()\n            this.afterScroll=false\n        }\n    }\n\n    moreImages=async()=>{\n        this.afterScroll=true\n        this.setState({isLoading:true})\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                {this.state.modal && <Modal image={this.state.modal} onClose={this.closeModal} />}\n                <Searchbar onSubmit={this.handelSubmit}/>\n                <ImageGallery images={this.state.images} onClick={this.handelCicks}/>\n                {this.state.isLoadButton && <Button onMore={this.moreImages}/>}\n                {this.state.isLoading && <Loader/>}\n            </div>\n        )\n    }\n}\n","import ReactDOM from 'react-dom';\nimport './globalStyles.css';\nimport App from './App/App'\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}